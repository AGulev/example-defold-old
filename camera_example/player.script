function init(self)
	-- The player object handles its own input and drives the whole example.
	msg.post(".", "acquire_input_focus")

	-- Store current position and set target pos to the same since wanna start
	-- at a stand-still.
	self.pos = go.get_world_position()
	self.target = self.pos
end

function update(self, dt)
	-- Calculate a new position based on current pos interpolated towards current
	-- target position.
	self.pos = vmath.lerp(0.05, self.pos, self.target)
	go.set_position(self.pos)	
	-- Send our position to the camera so it can chase.
	msg.post("/camera", "look_at", { position = self.pos })
end

function on_input(self, action_id, action)
	if (action_id == hash("mouse_press")) then
		-- Set the desired player target to click position
		-- Input is given in screen space so we need to translate that to world space
 		local camera_position = go.get_position("/camera")
  		local screen_center = vmath.vector3(tonumber(sys.get_config("display.width", "0")) / 2, tonumber(sys.get_config("display.height", "0")) / 2, 0)
 		
		self.target.x = action.x + camera_position.x - screen_center.x
		self.target.y = action.y + camera_position.y - screen_center.y
	end
end
