This Defold project contain a set of examples that illustrate various concepts and aspects
of Defold development. Each example is contained within a separate folder and there is a
main menu interface (under folder "main") that present a GUI interface to the examples and
allows the user to select which example to run.

These are the examples:

And here are some more examples.

Magic
=====
This example illustrates message passing as a means of communicating between objects in a game or app.

Cards
=====
This example illustrates URL:s and paths, child-parent vs. collection-object hierarchies. See the
"Message passing" documentation.

HUD
===
This example shows a simple HUD implementation with a controller object. See the "HUD" documentation.

Worlds
======
This example implements a very simple streaming setup using collection proxies and triggers. See the
"Collection proxies" documentation.

Lifecycle
=========
This example runs through a full lifecycle of an application. Each step on the way is logged through
a console printout so you can study it in parallel to the code.

Input
=====
This example illustrates how to handle touch and keyboard (text) input. It implements a pause menu
that consumes input to shift input focus dynamically.

Modules
=======
This example shows how to share code through the use of a Lua module. The module stores some data
internally which is a potential source of coupling between the users of the module.

Behaviors
=========
This example implements a simple flight behavior for butterflies (and other flying critters) in
three different manners.

Blue butterflies	Use a Lua module that contains animation behavior and stores data internally

Yellow butterflies	Interact with a GO that implements the behavior totally decoupled from the user

Green butterflies	Are controlled by an autonomous game object that implements the behavior and stores
					data internally

Physics
=======
This example is a simple implementation of a platformer with slopes. There are some dynamic physics
objects in addition to the character. These objects have physical properties that you can play with
to familiarize yourself with the characteristics of Box2D.

The character is a kinematic object and all interaction with the game is calculated manually which allows
precise design of the character behavior. Note that there are some edge cases that causes glitches and 
unwanted side effects in the player movement, particularly at slope edges. These have been left as 
an exercise for you to track down and solve.

Animation
=========
This example contains a Spine model and a set of animations (all taken from the Spineboy example).
Animation blending can be customized and tested. The "run" animation sends events that plays
footstep sounds.

Model
=====
A simple 3D model with a custom material.

Material
========
An example of a custom material with a shader constant that controls the amount of blur in the
fragment shader.

Camera
======
A simple camera example with a 2D chase camera that alters its distance depending on movement
speed.

Slice 9
=======
A demonstration of the GUI slice 9 node type and its capabilities.

Mixer
=====
A sound mixer with support for dynamic mixing of sound groups. The demo song is a good example
of what might happen if content from two sources are merged into the same project.

Fireworks
=========
Particle effects and sounds. The example includes a gating mechanism that prevents sounds from
playing too close in sync that would otherwise cause phasing artifacts.

Pie
===
A demonstration of the GUI pie node type and its capabilities.

Fonts
=====
A demonstration of the two font-types available and how they respond to resizing.

Clipping
========
A simple demonstration of GUI hierarchial stencil clipping. You can see the effect of normal and
inverted clipping.

Coroutine
=========
A simple example on how coroutines can be used to simplify the creation of sequenced events.

IAP
===
A simple In-App Purchase example. This example requires setup on Apple's developer services 
(Member Center and iTunes Connect) or Google Play Developer Console.

Push
====
A simple example on how to register for, and receive remote and local push notifications.
This example requires setup on Apple's developer services (Member Center) or Google 
Play Developer Console.

Collection factory
==================
This example showcases the "collectionfactory" component that allows dynamic spawning of game
object hierarchies from a collection file prototype.

Layouts
=======
A very simple example that demonstrate dynamic GUI layouts. Run on device and rotate between
landscape and portrait.


###############################################################################

	Platformer graphics (Deluxe) by Kenney Vleugels (www.kenney.nl)

			------------------------------

			        License (CC0)
	       http://creativecommons.org/publicdomain/zero/1.0/

	You may use these graphics in personal and commercial projects.
	Credit (Kenney or www.kenney.nl) would be nice but is not mandatory.

###############################################################################
