function init(self)
	msg.post("#", "acquire_input_focus")
	msg.post("back", "disable")
	self.loaded_proxy = nil
end

function on_message(self, message_id, message, sender)
    if message_id == hash("proxy_loaded") then
        -- The collection has loaded and it's time to enable it.
        msg.post(sender, "enable")
		
		-- Let the loaded collection take over.
    	msg.post("#", "release_input_focus")
    	-- Disable the main menu.
		msg.post("main_menu", "disable")
		-- Enable the "Back" button
		msg.post("back", "enable")

		self.loaded_proxy = sender
	elseif message_id == hash("back") then
		-- Back to the main menu
		msg.post(self.loaded_proxy, "disable")
		msg.post(self.loaded_proxy, "final")
		msg.post(self.loaded_proxy, "unload")

		-- Reset things in the render script
		msg.post("@render:", "clear_color", { color = vmath.vector4(0, 0, 0, 1) } )
		msg.post("@render:", "no_camera")
		
    	-- Enable the main menu.
		msg.post("main_menu", "enable")
		-- Disable the "Back" button
		msg.post("back", "disable")

		-- Take back input.
    	msg.post("#", "acquire_input_focus")
    end
end

function on_input(self, action_id, action)
	if (action_id == hash("mouse_press")) and action.pressed == true then
		local x = action.x
		local y = action.y
			
		-- Get the nodes we're gonna test against.
		local hudnode = gui.get_node("hud")
		local cardsnode = gui.get_node("cards")
		local magicnode = gui.get_node("magic")
		local worldsnode = gui.get_node("worlds")
		local lifecyclenode = gui.get_node("lifecycle")
		local inputnode = gui.get_node("input")
		local modulesnode = gui.get_node("modules")
		local behaviorsnode = gui.get_node("behaviors")
		local physicsnode = gui.get_node("physics")
		local animationnode = gui.get_node("animation")
		local modelnode = gui.get_node("model")
		local materialnode = gui.get_node("material")
		local cameranode = gui.get_node("camera")
		local slice9node = gui.get_node("slice9")
		local mixernode = gui.get_node("mixer")
		local fireworksnode = gui.get_node("fireworks")
		local pienode = gui.get_node("pie")
		local clippingnode = gui.get_node("clipping")
		local fontsnode = gui.get_node("fonts")
		
		-- Test if user has touched one of the valid text nodes.
		if gui.pick_node(hudnode, x, y) then
			-- Load the HUD collection
			msg.post("/loader#hudproxy", "load")			
		elseif gui.pick_node(cardsnode, x, y) then
			-- Load the Cards collection
			msg.post("/loader#cardsproxy", "load")
		elseif gui.pick_node(magicnode, x, y) then
			-- Load the magic collection
			msg.post("/loader#magicproxy", "load")
		elseif gui.pick_node(worldsnode, x, y) then
			-- Load the worlds collection
			msg.post("/loader#worldsproxy", "load")
		elseif gui.pick_node(lifecyclenode, x, y) then
			-- Load the lifecycle collection
			msg.post("/loader#lifecycleproxy", "load")
		elseif gui.pick_node(inputnode, x, y) then
			-- Load the input collection
			msg.post("/loader#inputproxy", "load")
		elseif gui.pick_node(modulesnode, x, y) then
			-- Load the modules collection
			msg.post("/loader#modulesproxy", "load")
		elseif gui.pick_node(behaviorsnode, x, y) then
			-- Load the behaviors collection
			msg.post("/loader#behaviorsproxy", "load")
		elseif gui.pick_node(physicsnode, x, y) then
			-- Load the physics collection
			msg.post("/loader#physicsproxy", "load")
		elseif gui.pick_node(animationnode, x, y) then
			-- Load the animation collection
			msg.post("/loader#animationproxy", "load")
		elseif gui.pick_node(modelnode, x, y) then
			-- Load the model collection
			msg.post("/loader#modelproxy", "load")
		elseif gui.pick_node(materialnode, x, y) then
			-- Load the material collection
			msg.post("/loader#materialproxy", "load")
		elseif gui.pick_node(cameranode, x, y) then
			-- Load the camera collection
			msg.post("/loader#cameraproxy", "load")
		elseif gui.pick_node(slice9node, x, y) then
			-- Load the slice9 collection
			msg.post("/loader#slice9proxy", "load")
		elseif gui.pick_node(mixernode, x, y) then
			-- Load the mixer collection
			msg.post("/loader#mixerproxy", "load")
		elseif gui.pick_node(fireworksnode, x, y) then
			-- Load the fireworks collection
			msg.post("/loader#fireworksproxy", "load")
		elseif gui.pick_node(pienode, x, y) then
			-- Load the pie collection
			msg.post("/loader#pieproxy", "load")
		elseif gui.pick_node(clippingnode, x, y) then
			-- Load the clipping collection
			msg.post("/loader#clippingproxy", "load")
		elseif gui.pick_node(fontsnode, x, y) then
			-- Load the fonts collection
			msg.post("/loader#fontsproxy", "load")
		end
	end	
end
